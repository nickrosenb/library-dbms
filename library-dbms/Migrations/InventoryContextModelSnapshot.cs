// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using library_dbms.Models;

namespace library_dbms.Migrations
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("library_dbms.Models.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("asset_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetStatus")
                        .HasColumnName("asset_status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BarcodeNum")
                        .HasColumnName("barcode_num")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Category")
                        .HasColumnName("category")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Manufacturer")
                        .HasColumnName("manufacturer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModelNum")
                        .HasColumnName("model_num")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SerialNum")
                        .HasColumnName("serial_num")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AssetId");

                    b.ToTable("asset");
                });

            modelBuilder.Entity("library_dbms.Models.AssetCategory", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("category_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CategoryID")
                        .HasName("asset_category$PrimaryKey");

                    b.ToTable("asset_category");
                });

            modelBuilder.Entity("library_dbms.Models.AssetLocation", b =>
                {
                    b.Property<int>("AssetId")
                        .HasColumnName("asset_id")
                        .HasColumnType("int");

                    b.Property<string>("BuildingNum")
                        .HasColumnName("building_num")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RoomNum")
                        .HasColumnName("room_num")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("AssetId")
                        .HasName("asset_location$Index_F196FE77_CD58_49B2");

                    b.HasIndex("AssetId")
                        .HasName("asset_location$Rel_3DFF26E2_E4F6_4FD4");

                    b.ToTable("asset_location");
                });

            modelBuilder.Entity("library_dbms.Models.AssignedToDep", b =>
                {
                    b.Property<int>("AssetId")
                        .HasColumnName("asset_id")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentNum")
                        .HasColumnName("department_num")
                        .HasColumnType("int");

                    b.HasKey("AssetId")
                        .HasName("assigned_to_dep$Index_E9BFA968_9E1B_44C8");

                    b.HasIndex("AssetId")
                        .HasName("assigned_to_dep$Rel_64E24362_A635_469B");

                    b.HasIndex("DepartmentNum")
                        .HasName("assigned_to_dep$Rel_D5117F10_A9F9_4356");

                    b.ToTable("assigned_to_dep");
                });

            modelBuilder.Entity("library_dbms.Models.AssignedToEmp", b =>
                {
                    b.Property<int>("AssetId")
                        .HasColumnName("asset_id")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("int");

                    b.HasKey("AssetId")
                        .HasName("assigned_to_emp$Index_4143E321_EFA4_4B1B");

                    b.HasIndex("AssetId")
                        .HasName("assigned_to_emp$Rel_9293AE47_A97C_44FE");

                    b.HasIndex("EmployeeId")
                        .HasName("assigned_to_emp$Rel_86004752_E8F8_4801");

                    b.ToTable("assigned_to_emp");
                });

            modelBuilder.Entity("library_dbms.Models.Department", b =>
                {
                    b.Property<int>("DepartmentNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("department_num")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnName("department_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNum")
                        .HasColumnName("phone_num")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.HasKey("DepartmentNum")
                        .HasName("department$Index_8E4A7CB3_8A33_47A1");

                    b.ToTable("department");
                });

            modelBuilder.Entity("library_dbms.Models.DepartmentLocation", b =>
                {
                    b.Property<int>("DepartmentNum")
                        .HasColumnName("department_num")
                        .HasColumnType("int");

                    b.Property<string>("BuildingNum")
                        .HasColumnName("building_num")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("RoomNum")
                        .HasColumnName("room_num")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("DepartmentNum", "BuildingNum", "RoomNum")
                        .HasName("department_location$Index_32791611_745F_46B1");

                    b.HasIndex("DepartmentNum")
                        .HasName("department_location$Rel_7E770B8A_9D8E_4B3C");

                    b.ToTable("department_location");
                });

            modelBuilder.Entity("library_dbms.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("employee_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentNum")
                        .HasColumnName("department_num")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PhoneNum")
                        .HasColumnName("phone_num")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentNum")
                        .HasName("employee$Rel_11CE5EBA_BA9C_4D08");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("library_dbms.Models.EmployeeLocation", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("int");

                    b.Property<string>("BuildingNum")
                        .HasColumnName("building_num")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("RoomNum")
                        .HasColumnName("room_num")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("EmployeeId", "BuildingNum", "RoomNum")
                        .HasName("employee_location$Index_8BC48910_8257_4055");

                    b.HasIndex("EmployeeId")
                        .HasName("employee_location$Rel_5E0778F4_6BF9_4E3C");

                    b.ToTable("employee_location");
                });

            modelBuilder.Entity("library_dbms.Models.LtsStaff", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("int");

                    b.Property<decimal?>("LaborCost")
                        .HasColumnName("labor_cost")
                        .HasColumnType("money");

                    b.HasKey("EmployeeId")
                        .HasName("lts_staff$Index_EAEF5A50_4D82_4BDB");

                    b.HasIndex("EmployeeId")
                        .HasName("lts_staff$Rel_C2845076_B61A_423F");

                    b.ToTable("lts_staff");
                });

            modelBuilder.Entity("library_dbms.Models.MaintenanceLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("log_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetId")
                        .HasColumnName("asset_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePerformed")
                        .HasColumnName("date_performed")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("HoursLogged")
                        .HasColumnName("hours_logged")
                        .HasColumnType("int");

                    b.HasKey("LogId")
                        .HasName("maintenance_log$Index_817AC782_CA89_4215");

                    b.HasIndex("AssetId")
                        .HasName("maintenance_log$Rel_B29742EB_3B1B_4EBC");

                    b.ToTable("maintenance_log");
                });

            modelBuilder.Entity("library_dbms.Models.PerformedBy", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("int");

                    b.Property<int>("LogId")
                        .HasColumnName("log_id")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnName("total_cost")
                        .HasColumnType("money");

                    b.HasKey("EmployeeId", "LogId")
                        .HasName("performed_by$Index_F5E8F2D0_A1AB_4CC2");

                    b.HasIndex("LogId")
                        .HasName("performed_by$Rel_2E859975_9CD4_4647");

                    b.ToTable("performed_by");
                });

            modelBuilder.Entity("library_dbms.Models.SalesRep", b =>
                {
                    b.Property<int>("RepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rep_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Ext")
                        .HasColumnName("ext")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PhoneNum")
                        .HasColumnName("phone_num")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("VendorId")
                        .HasColumnName("vendor_id")
                        .HasColumnType("int");

                    b.HasKey("RepId")
                        .HasName("sales_rep$Index_F7ADC6BE_30BB_4E7A");

                    b.HasIndex("VendorId")
                        .HasName("sales_rep$Rel_BD8B7D81_23F8_4C13");

                    b.ToTable("sales_rep");
                });

            modelBuilder.Entity("library_dbms.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StatusID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status1")
                        .HasColumnName("Status")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("StatusId");

                    b.ToTable("status");
                });

            modelBuilder.Entity("library_dbms.Models.SuppliedBy", b =>
                {
                    b.Property<int>("AssetId")
                        .HasColumnName("asset_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnName("purchase_date")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnName("purchase_price")
                        .HasColumnType("money");

                    b.Property<int>("VendorId")
                        .HasColumnName("vendor_id")
                        .HasColumnType("int");

                    b.HasKey("AssetId")
                        .HasName("supplied_by$Index_7D9EE7AC_5C9F_44CB");

                    b.HasIndex("VendorId")
                        .HasName("supplied_by$vendor_id");

                    b.ToTable("supplied_by");
                });

            modelBuilder.Entity("library_dbms.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vendor_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnName("company_name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PhoneNum")
                        .HasColumnName("phone_num")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Website")
                        .HasColumnName("website")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("VendorId");

                    b.ToTable("vendor");
                });

            modelBuilder.Entity("library_dbms.Models.AssetLocation", b =>
                {
                    b.HasOne("library_dbms.Models.Asset", "Asset")
                        .WithOne("AssetLocation")
                        .HasForeignKey("library_dbms.Models.AssetLocation", "AssetId")
                        .HasConstraintName("asset_location$Rel_3DFF26E2_E4F6_4FD4")
                        .IsRequired();
                });

            modelBuilder.Entity("library_dbms.Models.AssignedToDep", b =>
                {
                    b.HasOne("library_dbms.Models.Asset", "Asset")
                        .WithOne("AssignedToDep")
                        .HasForeignKey("library_dbms.Models.AssignedToDep", "AssetId")
                        .HasConstraintName("assigned_to_dep$Rel_64E24362_A635_469B")
                        .IsRequired();

                    b.HasOne("library_dbms.Models.Department", "DepartmentNumNavigation")
                        .WithMany("AssignedToDep")
                        .HasForeignKey("DepartmentNum")
                        .HasConstraintName("assigned_to_dep$Rel_D5117F10_A9F9_4356")
                        .IsRequired();
                });

            modelBuilder.Entity("library_dbms.Models.AssignedToEmp", b =>
                {
                    b.HasOne("library_dbms.Models.Asset", "Asset")
                        .WithOne("AssignedToEmp")
                        .HasForeignKey("library_dbms.Models.AssignedToEmp", "AssetId")
                        .HasConstraintName("assigned_to_emp$Rel_9293AE47_A97C_44FE")
                        .IsRequired();

                    b.HasOne("library_dbms.Models.Employee", "Employee")
                        .WithMany("AssignedToEmp")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("assigned_to_emp$Rel_86004752_E8F8_4801")
                        .IsRequired();
                });

            modelBuilder.Entity("library_dbms.Models.DepartmentLocation", b =>
                {
                    b.HasOne("library_dbms.Models.Department", "DepartmentNumNavigation")
                        .WithMany("DepartmentLocation")
                        .HasForeignKey("DepartmentNum")
                        .HasConstraintName("department_location$Rel_7E770B8A_9D8E_4B3C")
                        .IsRequired();
                });

            modelBuilder.Entity("library_dbms.Models.Employee", b =>
                {
                    b.HasOne("library_dbms.Models.Department", "DepartmentNumNavigation")
                        .WithMany("Employee")
                        .HasForeignKey("DepartmentNum")
                        .HasConstraintName("employee$Rel_11CE5EBA_BA9C_4D08");
                });

            modelBuilder.Entity("library_dbms.Models.EmployeeLocation", b =>
                {
                    b.HasOne("library_dbms.Models.Employee", "Employee")
                        .WithMany("EmployeeLocation")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("employee_location$Rel_5E0778F4_6BF9_4E3C")
                        .IsRequired();
                });

            modelBuilder.Entity("library_dbms.Models.LtsStaff", b =>
                {
                    b.HasOne("library_dbms.Models.Employee", "Employee")
                        .WithOne("LtsStaff")
                        .HasForeignKey("library_dbms.Models.LtsStaff", "EmployeeId")
                        .HasConstraintName("lts_staff$Rel_C2845076_B61A_423F")
                        .IsRequired();
                });

            modelBuilder.Entity("library_dbms.Models.MaintenanceLog", b =>
                {
                    b.HasOne("library_dbms.Models.Asset", "Asset")
                        .WithMany("MaintenanceLog")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("maintenance_log$Rel_B29742EB_3B1B_4EBC")
                        .IsRequired();
                });

            modelBuilder.Entity("library_dbms.Models.PerformedBy", b =>
                {
                    b.HasOne("library_dbms.Models.MaintenanceLog", "Log")
                        .WithMany("PerformedBy")
                        .HasForeignKey("LogId")
                        .HasConstraintName("performed_by$Rel_2E859975_9CD4_4647")
                        .IsRequired();
                });

            modelBuilder.Entity("library_dbms.Models.SalesRep", b =>
                {
                    b.HasOne("library_dbms.Models.Vendor", "Vendor")
                        .WithMany("SalesRep")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("sales_rep$Rel_BD8B7D81_23F8_4C13")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
